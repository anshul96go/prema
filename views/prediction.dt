extends base

block body
	table(class="pred_info")
		tr
			th yes
			td(id="yes_shares") #{pred.yes_shares} shares
			- if (req.session && predStats.yes_shares > 0)
				td(id="your_yes_shares") #{predStats.yes_shares} are yours
				td(id="your_yes_price") #{predStats.yes_price} paid
		tr
			th no
			td(id="no_shares") #{pred.no_shares} shares
			- if (req.session && predStats.no_shares > 0)
				td(id="your_no_shares") #{predStats.no_shares} are yours
				td(id="your_no_price") #{predStats.no_price} paid
		tr
			th chance
			td #{round(pred.chance * 100)}%
		tr
			th created
			td
				time(datetime="#{pred.created}") #{pred.created}
				| by
				a(href="/u/#{creator.id}") #{creator.name}
		tr
			th closes
			td
				time(datetime="#{pred.closes}") #{pred.closes}
		- if (pred.settled != "")
			tr
				th settled
				td
					time(datetime="#{pred.settled}") #{pred.settled}
	- if (!closed && req.session)
		form(method="POST")
			- foreach (err; errors)
				p(class="error") #{err}
			p
				| Buy
				input(type="text", value="1", name="amount", size="5", id="share_amount")
				| shares of type
				select(name="type", id="share_type")
					option(value="yes") yes
					option(value="no") no
				| for
				span(id="price") 0
				br
				| which changes the chance to
				span(class="chance", id="future_chance") #{round(pred.chance*100)}%
				|.
			p
				button Do it
	- if (can_settle && !settled)
		- if (closed)
			- foreach (err; errors)
				p(class="error") #{err}
		p
			form(method="POST", action="/settle")
				input(type="hidden", name="predid", value="#{pred.id}")
				button(name="settlement", value="true") Settle as True
				| or
				button(name="settlement", value="false") Settle as False
	- else if (closed && !settled && !can_settle)
		p You have to wait for the creator
			a(href="/u/#{creator.id}") #{creator.name}
			| to settle this.
	- if (closed && settled)
		p Prediction is settled as "#{pred.result}".
	div(id="chance_history")
	script(type="text/javascript", src="https://www.google.com/jsapi")
	:javascript
		google.load("visualization", "1", {packages:["corechart"]});
		google.setOnLoadCallback(drawChart);
		function getData() {
		  var raw_data = [['Date', 'Chance']];
		  var tbl = document.getElementById("raw_history");
		  var trs = tbl.getElementsByTagName("tr");
		  for(var i=0; i < trs.length; i++) {
		    var th = trs[i].getElementsByTagName("time")[0];
		    var date = new Date(th.getAttribute("datetime"));
		    var td = trs[i].getElementsByTagName("td")[0];
		    var chance = td.innerHTML;
		    chance = parseFloat(chance.substring(0,chance.length-1));
		    raw_data.push([date, chance]);
		  }
		  return raw_data;
		}
		function drawChart() {
		  var data = google.visualization.arrayToDataTable(getData());
		  var options = {
		    title: 'History of Chance',
		    legend: 'none',
		    backgroundColor: { fill:'transparent' },
		    hAxis: {title: 'time'},
		    vAxis: {title: '%', minValue: 0, maxValue: 100}
		  };
		  var chart = new google.visualization.AreaChart(document.getElementById('chance_history'));
		  chart.draw(data, options);
		}
	table(id="raw_history")
		- foreach (change; pred_changes)
			tr
				th
					time(datetime="#{change.date}") #{change.date}
				td #{round(change.chance*100)}%
				td #{change.shares} shares
				td #{change.type}

